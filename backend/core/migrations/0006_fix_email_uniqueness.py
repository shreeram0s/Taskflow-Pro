# Generated by Django 5.2.6 on 2025-09-17 03:13

from django.db import migrations


def fix_duplicate_emails(apps, schema_editor):
    """Fix duplicate emails by making them unique"""
    User = apps.get_model('core', 'User')
    
    # Find users with duplicate emails
    from django.db.models import Count
    duplicate_emails = User.objects.values('email').annotate(
        count=Count('email')
    ).filter(count__gt=1)
    
    for email_data in duplicate_emails:
        email = email_data['email']
        users = User.objects.filter(email=email).order_by('id')
        
        # Keep the first user, update others
        for i, user in enumerate(users[1:], 1):
            user.email = f"{email.split('@')[0]}+{i}@{email.split('@')[1]}"
            user.save()


def reverse_fix_duplicate_emails(apps, schema_editor):
    """Reverse operation - not needed"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_enhance_user_security'),
    ]

    operations = [
        migrations.RunPython(fix_duplicate_emails, reverse_fix_duplicate_emails),
    ]
